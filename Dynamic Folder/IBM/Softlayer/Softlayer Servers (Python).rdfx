<DynamicFolderExport>
    <Name>Dynamic Folder Export</Name>
    <Objects>
        <DynamicFolderExportObject>
            <Type>DynamicFolder</Type>
            <Name>Softlayer Servers (Python)</Name>
            <Description>This Dynamic Folder sample for IBM Softlayer supports grabbing all virtual servers of a specified datacenter.</Description>
            <Notes><![CDATA[<h2><strong>Dynamic Folder sample for IBM Softlayer Virtual Server</strong></h2>

<p><strong>Version</strong>: 1.0<br />
<strong>Author</strong>: Royal Applications, <a href="https://github.com/eightnoneone">Matt Warren</a></p>

<p>This Dynamic Folder sample for IBM Softlayer supports grabbing all virtual servers of a specified datacenter.</p>

<h3><strong>Prerequisites</strong></h3>

<ul>
	<li>Softlayer Command Line Interface (CLI) Python pip module&nbsp;needs to be installed and configured for your OS default&nbsp;Python.<br />
	<a href="https://softlayer-api-python-client.readthedocs.io/en/latest/">https://softlayer-api-python-client.readthedocs.io/en/latest/</a></li>
</ul>

<h3><strong>Setup</strong></h3>

<ul>
	<li>Enter the datacenter that you want to grab instances from in the &quot;Datacenter&quot; field in the &quot;Custom Properties&quot; section or leave it as an empty string if you configured the SLCLI with a default datacenter.</li>
	<li>Depends on a SLCLI config file for username and password/key.</li>
</ul>

<h3><strong>Notes</strong></h3>

<ul>
	<li>The provided script sets SSH connections to &quot;Use credentials from parent folder&quot; and sets RDP connections to &quot;Specify a credential name&quot;&nbsp;There are multiple different ways to manage credentials with Royal. Alternatively, you may also just use &quot;Connect with Options - Prompt for Credentials&quot; when establishing a connection.</li>
</ul>
]]></Notes>
            <CustomProperties>
                <CustomProperty>
                    <Name>Datacenter</Name>
                    <Type>Text</Type>
                    <Value>tor01</Value>
                </CustomProperty>
            </CustomProperties>
            <ScriptInterpreter>python</ScriptInterpreter>
            <Script><![CDATA[import SoftLayer
import json


def get_instances(datacenter = ""):

    client = SoftLayer.Client()
    mgr = SoftLayer.VSManager(client)

    connections = [ ]

    object_mask = "mask[globalIdentifier,hostname,operatingSystemReferenceCode,primaryBackendIpAddress]"
    for instance in mgr.list_instances(datacenter=datacenter, mask=object_mask):

        instance_id = instance.get("globalIdentifier", "")
        is_windows = instance.get("operatingSystemReferenceCode").partition('_')[0] == "WIN"


#         public_ip_address = instance.get("PublicIpAddress", "")
#         public_hostname = instance.get("PublicDnsName", "")

        private_ip_address = instance.get("primaryBackendIpAddress", "")
        private_hostname = instance.get("hostname", "")
        name = private_hostname

# Fetching tags on each vs is very time consuming. 
#         tags = details.get("tagReferences")
#         tagstring = [ ]
#         for tag in tags:
#             tagstring.append(tag['tag'].get('name'))
#         notes = ' '.join(tagstring)
        

        computer_name = private_ip_address

        if computer_name == "":
            computer_name = public_ip_address

        connection = { }

        if not is_windows:
            connection["Type"] = "TerminalConnection"
            connection["TerminalConnectionType"] = "SSH"
            connection['CredentialsFromParent'] = True
        else:
            connection["Type"] = "RemoteDesktopConnection"
            connection['CredentialName'] = "AD_Crendentials"

        connection["ID"] = instance_id
        connection["Name"] = name
        connection["ComputerName"] = computer_name
#         connection['Notes'] = notes
        

        connections.append(connection)

    store = {
        "Objects": connections
    }

    store_json = json.dumps(store, indent=2)

    return store_json

print(get_instances("$CustomProperty.Datacenter$"))]]></Script>
            <DynamicCredentialScriptInterpreter>json</DynamicCredentialScriptInterpreter>
            <DynamicCredentialScript><![CDATA[{
	"Username": "user",
	"Password": "pass"
}]]></DynamicCredentialScript>
        </DynamicFolderExportObject>
    </Objects>
</DynamicFolderExport>