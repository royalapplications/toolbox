<DynamicFolderExport>
  <Name>Dynamic Folder Export</Name>
  <Objects>
    <DynamicFolderExportObject>
      <Type>DynamicFolder</Type>
      <Name>Passwordstate - Based on management module (PowerShell)</Name>
      <Description>Get dynamic credentials from passwordstate server</Description>
      <Notes><![CDATA[<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title></title>
<style type="text/css">.csDC983153{text-align:left;text-indent:0pt;margin:0pt 0pt 12pt 0pt;line-height:1.25;background-color:#FFFFFF}
			.csFF225DB0{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:24pt;font-weight:bold;font-style:normal;}
			.csBAD50368{text-align:left;text-indent:0pt;margin:18pt 0pt 12pt 0pt;line-height:1.25;background-color:#FFFFFF}
			.cs36BD7741{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:18pt;font-weight:bold;font-style:normal;}
			.cs4E257059{text-align:left;text-indent:0pt;margin:0pt 0pt 12pt 0pt;background-color:#FFFFFF}
			.cs3F7890BC{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:12pt;font-weight:normal;font-style:normal;}
			.csE4240DC2{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:12pt;font-weight:normal;font-style:normal;text-decoration: none;}
			.cs32F5C691{color:#0366D6;background-color:transparent;font-family:'Microsoft Sans Serif';font-size:12pt;font-weight:normal;font-style:normal;}
			.cs3B5CF86A{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:15pt;font-weight:bold;font-style:normal;}
			.cs1BCF77B1{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:12pt;font-weight:bold;font-style:normal;}
			.cs47CD4504{text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;line-height:1.45;background-color:#F6F8FA}
			.csB34DFEC8{color:#24292E;background-color:#F6F8FA;font-family:'Microsoft Sans Serif';font-size:10pt;font-weight:normal;font-style:normal;}
			.csDD4EBAB5{color:#005CC5;background-color:#F6F8FA;font-family:'Microsoft Sans Serif';font-size:10pt;font-weight:normal;font-style:normal;}
			.csEDAFCEF{color:#D73A49;background-color:#F6F8FA;font-family:'Microsoft Sans Serif';font-size:10pt;font-weight:normal;font-style:normal;}
			.cs6F59A5F9{color:#032F62;background-color:#F6F8FA;font-family:'Microsoft Sans Serif';font-size:10pt;font-weight:normal;font-style:normal;}
			.cs1CAA9B31{color:#24292E;background-color:#FFFFFF;font-family:'Microsoft Sans Serif';font-size:10pt;font-weight:normal;font-style:normal;}
			.cs5D88D4F9{text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;background-color:#FFFFFF}
</style>
<h1 class="csDC983153"><a name="_dx_frag_StartFragment"></a><span class="csFF225DB0">Password State Dynamic Folder</span></h1>

<h2 class="csBAD50368"><span class="cs36BD7741">How to use</span></h2>

<p class="cs4E257059"><span class="cs3F7890BC">Install passwordstate-management powershell module&nbsp;<a class="csE4240DC2" href="https://www.powershellgallery.com/packages/passwordstate-management/"><span class="cs32F5C691">PSGalleryLink</span></a></span></p>

<h3 class="csBAD50368"><span class="cs3B5CF86A">Setup your passwordstate management environment</span></h3>

<p class="cs4E257059"><span class="cs3F7890BC">First you will need to setup the environment for PasswordState. This prevents you having to enter the api key all the time as it&#39;s stored in an encrypted format. Or you can use Windows authentication using the currently logged on user.</span></p>

<h4 class="csBAD50368"><span class="cs1BCF77B1">For API Key</span></h4>

<p class="cs47CD4504"><span class="csB34DFEC8">&nbsp; &nbsp;&nbsp;</span><span class="csDD4EBAB5">Set-PasswordStateEnvironment</span><span class="csB34DFEC8"> &nbsp;</span><span class="csEDAFCEF">-</span><span class="csB34DFEC8">baseuri </span><span class="cs6F59A5F9">&quot;https://passwordstatserver.co.uk&quot;</span><span class="csB34DFEC8"> </span><span class="csEDAFCEF">-</span><span class="csB34DFEC8">apikey </span><span class="cs6F59A5F9">&quot;dsiwjdi9e0377dw84w45dsw5sw&quot;</span></p>

<h4 class="csBAD50368"><span class="cs1BCF77B1">For Windows Auth With Pass Through Authentication</span></h4>

<p class="cs47CD4504"><span class="csB34DFEC8">&nbsp; &nbsp;&nbsp;</span><span class="csDD4EBAB5">Set-PasswordStateEnvironment</span><span class="csB34DFEC8"> &nbsp;</span><span class="csEDAFCEF">-</span><span class="csB34DFEC8">baseuri </span><span class="cs6F59A5F9">&quot;https://passwordstateserver.co.uk&quot;</span><span class="csB34DFEC8"> </span><span class="csEDAFCEF">-</span><span class="csB34DFEC8">WindowsAuthOnly</span></p>

<h4 class="csBAD50368"><span class="cs1BCF77B1">For Windows Auth With Custom Credentials</span></h4>

<p class="cs47CD4504"><span class="csB34DFEC8">&nbsp; &nbsp;&nbsp;</span><span class="csDD4EBAB5">Set-PasswordStateEnvironment</span><span class="csB34DFEC8"> &nbsp;</span><span class="csEDAFCEF">-</span><span class="csB34DFEC8">baseuri </span><span class="cs6F59A5F9">&quot;https://passwordstateserver.co.uk&quot;</span><span class="csB34DFEC8"> </span><span class="csEDAFCEF">-</span><span class="csB34DFEC8">customcredentials $(</span><span class="csDD4EBAB5">Get-Credential</span><span class="csB34DFEC8">)</span></p>

<p class="cs4E257059"><span class="cs3F7890BC">This will save a file called&nbsp;</span><span class="cs1CAA9B31">passwordstate.json</span><span class="cs3F7890BC">&nbsp;under the users profile folder.</span></p>

<p class="cs5D88D4F9"><span class="cs3F7890BC">For more infor about the module consult powershell help or the&nbsp;<a class="csE4240DC2" href="https://github.com/dnewsholme/PasswordState-Management"><span class="cs32F5C691">github repository</span></a></span><a name="_dx_frag_EndFragment"></a></p>
]]></Notes>
      <ScriptInterpreter>powershell</ScriptInterpreter>
      <Script><![CDATA[$ErrorActionPreference = "Stop"
$results = Get-PasswordStatePassword -preventauditing
$credentials = @()
foreach ($item in $results) {
    if ($item.Notes -like "-----BEGIN RSA PRIVATE KEY----*") {
        $credentials += [pscustomobject]@{
            Type           = "DynamicCredential"
            Name           = $item.Title
            ID             = $item.PasswordID
			Username       = ""
			Password       = ""
            KeyFileContent = $item.Notes
			Path = $item.TreePath
        }
  
    }
    else {
        $credentials += [pscustomobject]@{
            Type     = "DynamicCredential"
            Name     = $item.Title
			Username = ""
			Password = ""
            ID       = $item.PasswordID
			Path = $item.TreePath
        }
   
    }
}


$final = [pscustomobject]@{
    Objects = $credentials
}
$final | ConvertTo-Json -Depth 100 | Write-Output]]></Script>
      <DynamicCredentialScriptInterpreter>powershell</DynamicCredentialScriptInterpreter>
      <DynamicCredentialScript><![CDATA[[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
$ErrorActionPreference = "Stop"
$results = Get-PasswordStatePassword -PasswordID "$DynamicCredential.EffectiveID$"
$results.Password = $results.GetPassword()
$results | Select-Object Username,Password | ConvertTo-Json -Depth 100 | Write-Output]]></DynamicCredentialScript>
      <DynamicFolderScriptTokenMode>ReplaceInline</DynamicFolderScriptTokenMode>
      <DynamicFolderScriptEnvironmentPrefix>DynFolder_</DynamicFolderScriptEnvironmentPrefix>
      <DynamicCredentialScriptTokenMode>ReplaceInline</DynamicCredentialScriptTokenMode>
      <DynamicCredentialScriptEnvironmentPrefix>DynCredential_</DynamicCredentialScriptEnvironmentPrefix>
    </DynamicFolderExportObject>
  </Objects>
</DynamicFolderExport>