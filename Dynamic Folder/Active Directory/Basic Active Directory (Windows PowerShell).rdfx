<DynamicFolderExport>
    <Name>Dynamic Folder Export</Name>
    <Objects>
        <DynamicFolderExportObject>
            <Type>DynamicFolder</Type>
            <Name>Basic Active Directory</Name>
            <Description>In this example the Get-ADComputer commandlet is used to retrieve information from the Active Directory and shows all found computer objects in a tree structure mimicking the OU structure in the Active Directory.</Description>
            <Notes><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>
		</title>
		<style type="text/css">
			.cs2654AE3A{text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt}
			.csAF99984B{color:#000000;background-color:transparent;font-family:Calibri;font-size:14pt;font-weight:bold;font-style:normal;}
			.csC8F6D76{color:#000000;background-color:transparent;font-family:Calibri;font-size:11pt;font-weight:normal;font-style:normal;}
			.cs4306042E{color:#000000;background-color:transparent;font-family:Calibri;font-size:11pt;font-weight:bold;font-style:normal;}
			.cs26DADAAD{color:#000000;background-color:transparent;font-family:Calibri;font-size:11pt;font-weight:normal;font-style:normal;text-decoration: none;}
			.csCCA9035D{color:#0000FF;background-color:transparent;font-family:Calibri;font-size:11pt;font-weight:normal;font-style:normal;text-decoration: underline;}
			.cs15B7AE4B{text-align:left;margin:0pt 0pt 0pt 0pt;list-style-type:disc;color:#000000;background-color:transparent;font-family:Arial;font-size:11pt;font-weight:normal;font-style:normal}
		</style>
	</head>
	<body>
		<p class="cs2654AE3A"><span class="csAF99984B">Dynamic Folder for Basic Active Directory Synchronization</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="cs4306042E">Version:</span><span class="csC8F6D76"> 1.0</span></p><p class="cs2654AE3A"><span class="cs4306042E">Author:</span><span class="csC8F6D76"> Paul DeArment, Royal Applications</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csC8F6D76">This is a very basic dynamic folder example for Windows using PowerShell. In this example the Get-ADComputer commandlet is used to retrieve information from the Active Directory and shows all found computer objects in a tree structure mimicking the OU structure in the Active Directory.</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Special thanks to Paul DeArment from RandomizedHarmony for the contribution. You can also watch a YouTube video about this script here:</span></p><p class="cs2654AE3A"><span class="csC8F6D76"><a class="cs26DADAAD" href="https://www.youtube.com/watch?v=pKurlGhMfoQ&amp;feature=youtu.be"><span class="csCCA9035D">https://www.youtube.com/watch?v=pKurlGhMfoQ&amp;feature=youtu.be</span></a></span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csC8F6D76">The following Custom Properties can be configured:</span></p><p class="cs2654AE3A"><span class="csAF99984B">Get-ADComputer Paramater:</span></p><p class="cs2654AE3A"><span class="cs4306042E">SearchBase:</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Specifies an Active Directory path to search under.</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Example: ou=Enterprise Servers,dc=company,dc=pri</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="cs4306042E">Filter:</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Specifies a query string that retrieves Active Directory objects.</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Example 1: *</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Example 2: Name -like &quot;Computer01*&quot;</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="cs4306042E">SearchScope:</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Specifies the scope of an Active Directory search. The acceptable values for this parameter are:</span></p><ul style="margin-top:0;margin-bottom:0;">
			<li class="cs15B7AE4B"><span class="csC8F6D76">Base or 0</span></li><li class="cs15B7AE4B"><span class="csC8F6D76">OneLevel or 1</span></li><li class="cs15B7AE4B"><span class="csC8F6D76">Subtree or 2</span></li></ul>
		<p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csC8F6D76">See also: <a class="cs26DADAAD" href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/get-adcomputer?view=win10-ps"><span class="csCCA9035D">https://docs.microsoft.com/en-us/powershell/module/addsadministration/get-adcomputer?view=win10-ps</span></a></span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csAF99984B">Connection Object Configuration:</span></p><p class="cs2654AE3A"><span class="cs4306042E">Connection Type:</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Specifies which connection type Royal TS should create for the found Actvie Directory computer object.</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Example 1: RemoteDesktopConnection</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Example 2: TerminalConnection</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="cs4306042E">Credential Name:</span></p><p class="cs2654AE3A"><span class="csC8F6D76">Specifies the name of the credential for the connection object. If you specify &quot;?&quot; (without the quotes), Royal TS will prompt for the credential.</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csAF99984B">Extending the Script:</span></p><p class="cs2654AE3A"><span class="csC8F6D76">You can extend the script to inlcude more configuration settings or use a different credential mode. Feel free to adapt this dynamic folder, extend it, include additional custom properties and documentation, upload it to our github repository.</span></p><p class="cs2654AE3A"><span class="csC8F6D76">&nbsp;</span></p><p class="cs2654AE3A"><span class="csC8F6D76">See also: <a class="cs26DADAAD" href="https://www.royalapplications.com/go/kb-all-royaljson"><span class="csCCA9035D">https://www.royalapplications.com/go/kb-all-royaljson</span></a></span></p></body>
</html>
]]></Notes>
            <CustomProperties>
                <CustomProperty>
                    <Name>Get-ADComputer Parameters</Name>
                    <Type>Header</Type>
                    <Value />
                </CustomProperty>
                <CustomProperty>
                    <Name>SearchBase</Name>
                    <Type>Text</Type>
                    <Value>ou=Enterprise Servers,dc=company,dc=pri</Value>
                </CustomProperty>
                <CustomProperty>
                    <Name>Filter</Name>
                    <Type>Text</Type>
                    <Value>*</Value>
                </CustomProperty>
                <CustomProperty>
                    <Name>SearchScope</Name>
                    <Type>Text</Type>
                    <Value>subtree</Value>
                </CustomProperty>
                <CustomProperty>
                    <Name>Connection Object Configuration</Name>
                    <Type>Header</Type>
                    <Value />
                </CustomProperty>
                <CustomProperty>
                    <Name>Connection Type</Name>
                    <Type>Text</Type>
                    <Value>RemoteDesktopConnection</Value>
                </CustomProperty>
                <CustomProperty>
                    <Name>Credential Name</Name>
                    <Type>Text</Type>
                    <Value>?</Value>
                </CustomProperty>
            </CustomProperties>
            <ScriptInterpreter>powershell</ScriptInterpreter>
            <Script><![CDATA[Import-Module ActiveDirectory
[System.Collections.ArrayList]$array = @()
foreach ($computer in Get-ADComputer -SearchBase "$CustomProperty.SearchBase$" -Filter '$CustomProperty.Filter$' -SearchScope $CustomProperty.SearchScope$ -Properties canonicalname)
{
	$array.add((
			New-Object -TypeName System.Management.Automation.PSObject -Property @{
				"Type" = "$CustomProperty.ConnectionType$";
				"Name" = $computer.name;
				"ComputerName" = $computer.name;
				"credentialName" = "$CustomProperty.CredentialName$";
				"Path" = $computer.canonicalname.replace("/$($computer.name)", "")
			}
		)) | Out-Null
}
$array = $array | Sort-Object -Property path
$hash = @{ }
$hash.add("Objects", $array)

$hash | ConvertTo-Json]]></Script>
            <DynamicCredentialScriptInterpreter>json</DynamicCredentialScriptInterpreter>
            <DynamicCredentialScript />
        </DynamicFolderExportObject>
    </Objects>
</DynamicFolderExport>